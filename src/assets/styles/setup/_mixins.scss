/* Breakpoint mixins */

//mobile only
@mixin for-mobile-only-layout {
    @media (max-width: $mobile-breakpoint) {
        @content;
    }
}

// //mobile & tablet only
@mixin for-narrow-only-layout {
    @media (max-width: $narrow-breakpoint) {
        @content;
    }
}

//tablet and wider
@mixin for-narrow-layout {
    @media (min-width: $narrow-breakpoint) {
        @content;
    }
}

//small desktop and wider
@mixin for-normal-layout {
    @media (min-width: $normal-breakpoint) {
        @content;
    }
}


@mixin btn($type: regular, $width: auto) {
    display: grid;
    grid-auto-flow: column;
    align-items: center;
    justify-content: start;
    gap: em(8px, 14px);
    // min-height: 30px;

    width: $width;
    padding-inline: em(8px, 14px);
    padding-block: em(4px, 14px);
    // height: 32px;

    line-height: normal;
    border-radius: $border-radius-small;
    cursor: pointer;

    svg {
        height: em(20px, 14px);
        width: em(20px, 14px);
    }

    @if $type ==regular {

        // &:not(.person.active):not(.date-preview .btn):not(.link-preview .btn) {
        //     background-color: $clr0;
        // }

        color: $clr-font;

        &:hover:not(.person.active) {
            background-color: $clr-btn-hover;
        }
    }

    @else if $type ==clrblue {
        background-color: $clr-btn-add;
        color: $clr0;

        &:hover {
            background-color: $clr-btn-add-hover;
        }
    }

}

@mixin getStartedBtn($padding, $font-size, $arrow-before : 0.8rem, $arrow-after : 0.5rem) {
    position: relative;
    padding: $padding;
    background-color: #6161ff;
    border: none;
    border-radius: 2.5rem;
    color: #ffff;
    cursor: pointer;
    text-transform: none;
    display: flex;
    font-family: poppins-light;
    align-items: center;
    justify-content: center;
    transition: all .3s;


    .get-started-txt {
        padding-right: 1.2em;
        font-size: $font-size
    }

    .arrow-icon {
        position: absolute;
        right: $arrow-before;
        transition: right .3s;

    }

    &:hover {
        .arrow-icon {
            right: $arrow-after;
        }

        background-color: #5151d5
    }

}

/* Media  Mixins */
@mixin aspect-ratio($width, $height) {
    position: relative;
    overflow: hidden;

    &::before {
        display: block;
        content: "";
        width: 100%;
        padding-top: calc(($height / $width) * 100%);
    }

    >* {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }

    >img {
        height: 100%;
        object-fit: cover;
    }
}

// Mixin for removing hover efects on iphone screen
@mixin hover-supported {
    @media not all and (pointer: coarse) {
        &:hover {
            @content;
        }
    }
}